{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pc\\\\Desktop\\\\reactJS\\\\react2022\\\\src\\\\components\\\\ItemListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ProductCard from '../cardProducts/ProductCard';\nimport './ItemListContainer.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = () => {\n  _s();\n\n  const url = 'https://run.mocky.io/v3/8c83d4ff-8b8b-433a-98f2-349415402525';\n  const [products, setProducts] = useState([]);\n\n  const getProducts = async () => {\n    try {\n      const resp = await fetch(url); //esperamos a que se cumpla la promesa\n\n      const data = await resp.json(); //esperamos a que se parse la respuesta\n\n      setProducts(data); //seteamos nuestro state de productos\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    /*uso de fetch con async/await*/\n    getProducts();\n    /*uso de fetch API con promesas --descomentar y comentar \"getProducts()' para probar--*/\n    // fetch(url)\n    //     .then(resp => resp.json())\n    //     .then(data => setProducts(data))\n    //     .catch(err=> console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"products-container\",\n    children: products.length ? products.map(product => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)\n      }, product.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando productos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemListContainer, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["C:/Users/Pc/Desktop/reactJS/react2022/src/components/ItemListContainer.jsx"],"names":["React","useEffect","useState","ProductCard","ItemListContainer","url","products","setProducts","getProducts","resp","fetch","data","json","error","console","log","length","map","product","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAO,0BAAP;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAE5B,QAAMC,GAAG,GAAG,8DAAZ;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMM,WAAW,GAAG,YAAY;AAE5B,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAACL,GAAD,CAAxB,CADA,CAC8B;;AAC9B,YAAMM,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB,CAFA,CAE+B;;AAC/BL,MAAAA,WAAW,CAACI,IAAD,CAAX,CAHA,CAGkB;AACrB,KAJD,CAIE,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,GAVD;;AAYAZ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAO,IAAAA,WAAW;AAEX;AACA;AACA;AACA;AACA;AAEH,GAVQ,EAUN,EAVM,CAAT;AAcF,sBACE;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAA,cAGQF,QAAQ,CAACU,MAAT,GAGIV,QAAQ,CAACW,GAAT,CAAcC,OAAO,IAAI;AACrB,0BACI;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUA,OAAO,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPD,CAHJ,gBAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBV;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAvDD;;GAAMf,iB;;KAAAA,iB;AAyDN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ProductCard from '../cardProducts/ProductCard';\r\n\r\nimport './ItemListContainer.scss';\r\n\r\nconst ItemListContainer = () => {\r\n\r\n    const url = 'https://run.mocky.io/v3/8c83d4ff-8b8b-433a-98f2-349415402525';\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const getProducts = async () => {\r\n\r\n        try {\r\n            const resp = await fetch(url);//esperamos a que se cumpla la promesa\r\n            const data = await resp.json();//esperamos a que se parse la respuesta\r\n            setProducts(data);//seteamos nuestro state de productos\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        /*uso de fetch con async/await*/\r\n        getProducts();\r\n\r\n        /*uso de fetch API con promesas --descomentar y comentar \"getProducts()' para probar--*/\r\n        // fetch(url)\r\n        //     .then(resp => resp.json())\r\n        //     .then(data => setProducts(data))\r\n        //     .catch(err=> console.log(err));\r\n\r\n    }, [])\r\n    \r\n\r\n\r\n  return (\r\n    <section className=\"products-container\">\r\n\r\n        {\r\n            products.length ?  \r\n            \r\n            (\r\n                products.map( product => {\r\n                    return(\r\n                        <div key={product.name}>\r\n                            <ProductCard product={product} />\r\n                        </div>\r\n                        \r\n                    )\r\n                })\r\n            )\r\n\r\n            : <p>Cargando productos...</p>\r\n        }\r\n\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ItemListContainer\r\n"]},"metadata":{},"sourceType":"module"}